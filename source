#!/usr/bin/env python3

import sys
import os
import subprocess
from pyfiglet import Figlet
import random

def print_help():
    print("""
Usage: nite [option] [argument]

Options:
  --help                        Show this help message
  --ascii <file>                Load and display an ASCII art file
  --figlet <word>               Display a word in Figlet-style text
  --list-fonts                  List all available figlet fonts
  --figlet-font <font> <word>  Display a word using a specific figlet font
  --rainbow <word>             Display rainbow-colored figlet text
""")

def show_ascii(file_path):
    if not os.path.exists(file_path):
        print(f"Error: File '{file_path}' not found.")
        return
    with open(file_path, 'r', encoding='utf-8') as f:
        print(f.read())

def show_figlet(word):
    f = Figlet()
    print(f.renderText(word))

def show_figlet_font(font, word):
    try:
        f = Figlet(font=font)
        print(f.renderText(word))
    except Exception as e:
        print(f"Error: {e}")

def list_fonts():
    f = Figlet()
    fonts = f.getFonts()
    for font in fonts:
        print(font)

def rainbow_figlet(word):
    f = Figlet()
    colors = [
        '\033[91m', # red
        '\033[93m', # yellow
        '\033[92m', # green
        '\033[96m', # cyan
        '\033[94m', # blue
        '\033[95m', # magenta
    ]
    text = f.renderText(word)
    lines = text.splitlines()
    for line in lines:
        colored_line = ''.join(random.choice(colors) + c for c in line)
        print(colored_line + '\033[0m')  # reset color

def main():
    if len(sys.argv) < 2:
        print_help()
        return

    command = sys.argv[1]

    if command == '--help':
        print_help()
    elif command == '--ascii' and len(sys.argv) == 3:
        show_ascii(sys.argv[2])
    elif command == '--figlet' and len(sys.argv) == 3:
        show_figlet(sys.argv[2])
    elif command == '--list-fonts':
        list_fonts()
    elif command == '--figlet-font' and len(sys.argv) == 4:
        show_figlet_font(sys.argv[2], sys.argv[3])
    elif command == '--rainbow' and len(sys.argv) == 3:
        rainbow_figlet(sys.argv[2])
    else:
        print("Invalid command or missing argument.")
        print_help()

if __name__ == "__main__":
    main()
